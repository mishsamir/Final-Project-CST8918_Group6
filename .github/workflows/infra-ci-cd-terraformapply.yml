name: Terraform Apply

on:
  push:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
  ARM_ACCESS_KEY: "${{ secrets.ARM_ACCESS_KEY }}"
  ARM_SKIP_PROVIDER_REGISTRATION: true
  ARM_USE_OIDC: true

defaults:
  run:
    working-directory: ./infra

jobs:
  terraform-apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init

      - name: Force Unlock State (if locked)
        run: |
          if ! terraform plan -detailed-exitcode -no-color -lock-timeout=5s > /dev/null 2>&1; then
            echo "State locked, attempting unlock..."
            LOCK_OUTPUT=$(terraform plan -detailed-exitcode -no-color -lock-timeout=1s 2>&1 || true)
            LOCK_ID=$(echo "$LOCK_OUTPUT" | grep -o "ID: *[a-f0-9-]*" | cut -d' ' -f2 | head -1)
            if [ ! -z "$LOCK_ID" ]; then
              echo "Found lock ID: $LOCK_ID"
              echo "yes" | terraform force-unlock "$LOCK_ID" || echo "Failed to unlock"
            fi
          fi
        continue-on-error: true

      - name: Terraform Apply
        run: terraform apply -auto-approve -lock-timeout=10m